<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:c="http://baxter-it.com/config/component"
    xmlns:conf="http://baxter-it.com/config" xmlns:saxon="http://saxon.sf.net/"
    xmlns:jms="http://baxter-it.com/price-engine/conf/jms"
    xmlns:cm="http://baxter-it.com/price-engine/conf/client-messaging" exclude-result-prefixes="xs"
    version="2.0">

    <xsl:import href="baxterxsl:repo-base.xsl"/>
    <xsl:import href="baxterxsl:text-fmt.xsl"/>
    <xsl:import href="baxterxsl:conf-reference.xsl"/>

    <xsl:output method="text" encoding="UTF-8" omit-xml-declaration="yes"/>

    <xsl:param name="configurationProductId"/>
    <xsl:param name="configurationComponentId"/>

    <xsl:template match="/">
        <xsl:variable name="root">
            <xsl:copy-of select="conf:configuration-source/conf:request"/>
            <xsl:apply-templates select="conf:configuration-source/conf:request"
                mode="load-document-with-variants">
                <xsl:with-param name="prefix" select="'client-messaging'"/>
            </xsl:apply-templates>
            <xsl:apply-templates select="conf:configuration-source/conf:request"
                mode="load-document-with-variants">
                <xsl:with-param name="prefix" select="'jms'"/>
            </xsl:apply-templates>
        </xsl:variable>
        <xsl:apply-templates
            select="$root/cm:configuration/cm:clientMessaging[@id=$root/conf:request/conf:parameter[@id='cmid']/text()]"
        />
    </xsl:template>

    <xsl:template match="cm:clientMessaging">
        <xsl:text>#################################</xsl:text>
        <xsl:call-template name="CRLF"/>
        <xsl:text># JAVA Properties File          #</xsl:text>
        <xsl:call-template name="CRLF"/>
        <xsl:text># Generated by BaxterConfig  :) #</xsl:text>
        <xsl:call-template name="CRLF"/>
        <xsl:text>#################################</xsl:text>
        <xsl:call-template name="CRLF"/>
        <xsl:call-template name="CRLF"/>
        <xsl:apply-templates select="*"/>
    </xsl:template>

    <xsl:template match="cm:property">
        <xsl:value-of select="@id"/>
        <xsl:text>=</xsl:text>
        <xsl:choose>
            <xsl:when test="@reference">
                <xsl:value-of select="saxon:evaluate(@reference)"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:apply-templates/>
            </xsl:otherwise>
        </xsl:choose>
        <xsl:call-template name="CRLF"/>
    </xsl:template>

    <xsl:template name="channel-property">
        <xsl:param name="name"/>
        <xsl:param name="value"/>
        <xsl:value-of select="@prefix"/>
        <xsl:value-of select="$name"/>
        <xsl:text>=</xsl:text>
        <xsl:value-of select="$value"/>
        <xsl:call-template name="CRLF"/>
    </xsl:template>

    <xsl:template name="channel-common">
        <xsl:param name="channel"/>
        <xsl:variable name="node" select="/jms:configuration/jms:node[@id=$channel/@node]"/>
        <xsl:call-template name="channel-property">
            <xsl:with-param name="name">HOST</xsl:with-param>
            <xsl:with-param name="value" select="$node/@host"/>
        </xsl:call-template>
        <xsl:call-template name="channel-property">
            <xsl:with-param name="name">PORT</xsl:with-param>
            <xsl:with-param name="value" select="$node/@port"/>
        </xsl:call-template>
        <xsl:call-template name="channel-property">
            <xsl:with-param name="name">ACKMODE</xsl:with-param>
            <xsl:with-param name="value" select="$channel/@ackMode"/>
        </xsl:call-template>
        <xsl:call-template name="channel-property">
            <xsl:with-param name="name">RECONNECT</xsl:with-param>
            <xsl:with-param name="value" select="$channel/@reconnect"/>
        </xsl:call-template>
        <xsl:variable name="node2" select="/jms:configuration/jms:node[@id=$channel/@node2]"/>
        <xsl:call-template name="channel-property">
            <xsl:with-param name="name">HOST2</xsl:with-param>
            <xsl:with-param name="value" select="$node2/@host"/>
        </xsl:call-template>
        <xsl:call-template name="channel-property">
            <xsl:with-param name="name">PORT2</xsl:with-param>
            <xsl:with-param name="value" select="$node2/@port"/>
        </xsl:call-template>
        <xsl:variable name="auth"
            select="/jms:configuration/jms:authentication[@id=$channel/@authentication]"/>
        <xsl:call-template name="channel-property">
            <xsl:with-param name="name">USERNAME</xsl:with-param>
            <xsl:with-param name="value" select="$auth/@username"/>
        </xsl:call-template>
        <xsl:call-template name="channel-property">
            <xsl:with-param name="name">PASSWORD</xsl:with-param>
            <xsl:with-param name="value" select="$auth/@password"/>
        </xsl:call-template>
    </xsl:template>

    <xsl:template match="cm:jmsQueue">
        <xsl:variable name="channel" select="/jms:configuration/jms:queue[@id=current()/@channel]"/>
        <xsl:call-template name="channel-common">
            <xsl:with-param name="channel" select="$channel"/>
        </xsl:call-template>
        <xsl:call-template name="channel-property">
            <xsl:with-param name="name">QROUTER</xsl:with-param>
            <xsl:with-param name="value"
                select="/jms:configuration/jms:node[@id=$channel/@node]/@router"/>
        </xsl:call-template>
        <xsl:call-template name="channel-property">
            <xsl:with-param name="name">QNAME</xsl:with-param>
            <xsl:with-param name="value" select="$channel/@name"/>
        </xsl:call-template>
    </xsl:template>

    <xsl:template match="cm:jmsTopic">
        <xsl:variable name="channel" select="/jms:configuration/jms:topic[@id=current()/@channel]"/>
        <xsl:call-template name="channel-common">
            <xsl:with-param name="channel" select="$channel"/>
        </xsl:call-template>
        <xsl:call-template name="channel-property">
            <xsl:with-param name="name">TNAME</xsl:with-param>
            <xsl:with-param name="value" select="$channel/@name"/>
        </xsl:call-template>
    </xsl:template>

    <xsl:template match="conf:reference">
        <xsl:value-of select="@id"/>
        <xsl:text>=</xsl:text>
        <xsl:apply-templates select="." mode="url"/>
        <xsl:call-template name="CRLF"/>
    </xsl:template>

</xsl:stylesheet>
